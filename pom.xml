<?xml version="1.0" encoding="UTF-8"?>
<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 ~ COPYRIGHT Ericsson 2024
 ~
 ~
 ~
 ~ The copyright to the computer program(s) herein is the property of
 ~
 ~ Ericsson Inc. The programs may be used and/or copied only with written
 ~
 ~ permission from Ericsson Inc. or in accordance with the terms and
 ~
 ~ conditions stipulated in the agreement/contract under which the
 ~
 ~ program(s) have been supplied.
 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.2.3</version>
    <relativePath />
  </parent>
  <groupId>com.ericsson.oss.air</groupId>
  <artifactId>eric-oss-pm-stats-exporter</artifactId>
  <version>1.243.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>eric-oss-pm-stats-exporter</name>

  <scm>
    <developerConnection>${ericsson.scm.url}</developerConnection>
    <connection>${ericsson.scm.url}</connection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <ericsson.scm.url>
      scm:git:[fetch=]ssh://gerrit-gamma.gic..ericsson.se:29418/OSS/com.ericsson.oss.air/eric-oss-pm-stats-exporter[push=]ssh://gerrit-gamma.gic.ericsson.se:29418/OSS/com.ericsson.oss.air/eric-oss-pm-stats-exporter
    </ericsson.scm.url>

    <!-- 3PP Versions -->
    <version.gson>2.9.1</version.gson>
    <version.openjdk>17</version.openjdk>
    <version.spring-cloud>2023.0.0</version.spring-cloud>
    <version.avro>1.11.3</version.avro>
    <version.spring-cloud-kubernetes>3.1.0</version.spring-cloud-kubernetes>
    <version.schema-registry>7.4.0</version.schema-registry>
    <version.opentelemetry>1.31.0</version.opentelemetry>
    <version.micrometer-tracing>1.2.3</version.micrometer-tracing>
    <version.postgresql>42.6.2</version.postgresql>

    <!-- Ericsson Dependency Versions -->
    <version.enm-checkstyle-module>1.1.103</version.enm-checkstyle-module>
    <version.eric-common-logging>2.0.5</version.eric-common-logging>

    <!-- Build Dependencies -->
    <version.checkstyle-tool>10.0</version.checkstyle-tool>
    <version.maven-checkstyle-plugin>3.1.2</version.maven-checkstyle-plugin>
    <version.maven-pmd-plugin>3.16.0</version.maven-pmd-plugin>
    <version.maven-sortpom-plugin>2.13.1</version.maven-sortpom-plugin>
    <version.maven-scm-provider-gitexe>1.8.1</version.maven-scm-provider-gitexe>

    <!-- Test Dependencies -->
    <version.license-maven-plugin>3.0</version.license-maven-plugin>
    <version.sonar-maven-plugin>3.8.0.2131</version.sonar-maven-plugin>
    <version.mockito>5.2.0</version.mockito>
    <version.awaitility>4.2.0</version.awaitility>
    <version.test-container>1.17.1</version.test-container>
    <!-- JaCoCo plugin for Java Code Coverage -->
    <version.jcoco-maven.plugin>0.8.8</version.jcoco-maven.plugin>
    <!-- Minimum ratio or percentage of instructions to be covered, used by
            JaCoCo plugin. Industry standard is 0.8 or 80% which allows at least 80%
            of the code to be covered by the test cases. -->
    <jacoco-maven-plugin.coveredratio.minimum>0.5</jacoco-maven-plugin.coveredratio.minimum>
    <skipTestIT>true</skipTestIT>

    <sonar.exclusions>**/api/*.*, **/*Config*, **/config/**/*</sonar.exclusions>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${version.spring-cloud}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-checkstyle-plugin -->
      <dependency>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>${version.maven-checkstyle-plugin}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>${version.gson}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.avro</groupId>
      <artifactId>avro</artifactId>
      <version>${version.avro}</version>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-core</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jdbc</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-webflux</artifactId>
    </dependency>
    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.postgresql}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-kubernetes-fabric8-leader</artifactId>
      <version>${version.spring-cloud-kubernetes}</version>
    </dependency>
    <dependency>
      <groupId>io.confluent</groupId>
      <artifactId>kafka-avro-serializer</artifactId>
      <version>${version.schema-registry}</version>
    </dependency>
    <dependency>
      <groupId>com.ericsson.oss.orchestration.eo</groupId>
      <artifactId>eric-common-logging</artifactId>
      <version>${version.eric-common-logging}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-tracing-bridge-otel</artifactId>
      <version>${version.micrometer-tracing}</version>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-exporter-otlp</artifactId>
      <version>${version.opentelemetry}</version>
    </dependency>
    <dependency>
      <groupId>io.opentelemetry</groupId>
      <artifactId>opentelemetry-sdk-extension-jaeger-remote-sampler</artifactId>
      <version>${version.opentelemetry}</version>
    </dependency>

    <!-- Test Dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-contract-verifier</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.groovy</groupId>
          <artifactId>groovy-xml</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${version.test-container}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <version>${version.test-container}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${version.test-container}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${version.mockito}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${version.awaitility}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.ginsberg</groupId>
      <artifactId>junit5-system-exit</artifactId>
      <version>1.1.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.squareup.okhttp3</groupId>
      <artifactId>mockwebserver</artifactId>
      <version>4.9.3</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <resources>
      <resource>
        <filtering>true</filtering>
        <directory>src/main/resources</directory>
        <excludes>
          <exclude>**/eric-oss-pm-stats-exporter-openapi.zip</exclude>
        </excludes>
      </resource>
    </resources>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.mycila</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>${version.license-maven-plugin}</version>
          <configuration>
            <header>license/copyright-2024.txt</header>
            <validHeaders>
              <validHeader>license/copyright-2023.txt</validHeader>
              <validHeader>license/copyright-2022.txt</validHeader>
              <validHeader>license/copyright-2021.txt</validHeader>
            </validHeaders>
            <excludes>
              <exclude>.gitmodules</exclude>
              <exclude>bob/*</exclude>
              <exclude>bob*/</exclude>
              <exclude>.bob/*</exclude>
              <exclude>.bob*/</exclude>
              <exclude>k8s-logs/*</exclude>
              <exclude>**/.helmignore</exclude>
              <exclude>**/*.html</exclude>
              <exclude>**/_helpers.tpl</exclude>
              <exclude>**/*.tgz</exclude>
              <exclude>**/VERSION*</exclude>
              <exclude>**/*.repo</exclude>
              <exclude>license/copyright*</exclude>
              <exclude>design-rule-check-report*</exclude>
              <exclude>helm-install-dry-run.log</exclude>
              <exclude>*artifact.properties</exclude>
              <exclude>**/rest_conversion_log.txt</exclude>
              <exclude>**/rest2html*.zip</exclude>
              <exclude>settings.xml</exclude>
              <exclude>**/*.txt</exclude>
              <exclude>**/*.log</exclude>
              <exclude>**/custom_stages.yaml</exclude>
              <exclude>**/*.Jenkinsfile</exclude>
              <exclude>**/*.adoc</exclude>
              <exclude>**/*.config</exclude>
              <exclude>config/plms/*</exclude>
              <exclude>**/fossa/*</exclude>
              <exclude>ci/*</exclude>
              <exclude>ci*/</exclude>
              <exclude>**/config/</exclude>
              <exclude>generated/*</exclude>
              <exclude>generated*/</exclude>
              <exclude>dependencies/*</exclude>
              <exclude>dependencies*/</exclude>
            </excludes>
            <headerDefinitions>
              <headerDefinition>./license/javaHeaderDefinition.xml</headerDefinition>
              <headerDefinition>./license/xmlHeaderDefinition.xml</headerDefinition>
            </headerDefinitions>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>${version.maven-checkstyle-plugin}</version>
          <configuration>
            <logViolationsToConsole>true</logViolationsToConsole>
            <configLocation>${project.basedir}/src/main/resources/checkstyle.xml</configLocation>
            <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
            <violationSeverity>warning</violationSeverity>
            <includeTestSourceDirectory>true</includeTestSourceDirectory>
            <encoding>UTF-8</encoding>
            <consoleOutput>true</consoleOutput>
            <failsOnError>false</failsOnError>
            <linkXRef>false</linkXRef>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>${version.checkstyle-tool}</version>
            </dependency>
            <dependency>
              <groupId>com.github.ekryd.sortpom</groupId>
              <artifactId>sortpom-maven-plugin</artifactId>
              <version>${version.maven-sortpom-plugin}</version>
              <type>maven-plugin</type>
            </dependency>
          </dependencies>
          <executions>
            <execution>
                <id>checkstyle-report</id>
                <goals>
                    <goal>checkstyle</goal>
                </goals>
                <phase>compile</phase>
            </execution>
            <execution>
                <id>checkstyle-check</id>
                <goals>
                    <goal>check</goal>
                </goals>
                <phase>compile</phase>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.sonarsource.scanner.maven</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>${version.sonar-maven-plugin}</version>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- JaCoCo plugin for Java Code Coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${version.jcoco-maven.plugin}</version>
        <configuration>
          <append>true</append>
          <excludes>
            <exclude>**/api/*.*</exclude>
            <exclude>**/*Config*</exclude>
            <exclude>**/config/**/*</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
            <id>jacoco-check</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>test</phase>
            <!-- JaCoCo uses a set of different counters to calculate coverage
                            metrics -->
            <!-- Check configuration used to specify rules on element types (BUNDLE,
                            PACKAGE, CLASS, SOURCEFILE or METHOD) with a list of limits. Each limit applies
                            to a certain counter (INSTRUCTION, LINE, BRANCH, COMPLEXITY, METHOD, CLASS)
                            and defines a minimum or maximum for the corresponding value (TOTALCOUNT,
                            COVEREDCOUNT, MISSEDCOUNT, COVEREDRATIO, MISSEDRATIO). A limit ratio may
                            optionally be declared as a percentage where 0.80 and 80% represent the same
                            value, the value must end with %. -->
            <configuration>
              <rules>
                <rule implementation="org.jacoco.maven.RuleConfiguration">
                  <element>BUNDLE</element>
                  <limits>
                    <limit implementation="org.jacoco.report.check.Limit">
                      <counter>INSTRUCTION</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>${jacoco-maven-plugin.coveredratio.minimum}</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/*Config*</exclude>
                <exclude>**/config/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-ut</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/*Config*</exclude>
                <exclude>**/config/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>agent-for-it</id>
            <goals>
              <goal>prepare-agent-integration</goal>
            </goals>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/*Config*</exclude>
                <exclude>**/config/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-site</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>verify</phase>
            <configuration>
              <excludes>
                <exclude>**/api/*.*</exclude>
                <exclude>**/*Config*</exclude>
                <exclude>**/config/**/*</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- JaCoCo plugin for Java Code Coverage -->
      <plugin>
       <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
        <!-- settings for local jacoco running -->
        <configuration>
         <forkedProcessExitTimeoutInSeconds>120</forkedProcessExitTimeoutInSeconds>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.22.2</version>
        <configuration>
          <skipITs>${skipTestIT}</skipITs>
        </configuration>
      </plugin>
      <plugin>
       <groupId>org.apache.maven.plugins</groupId>
       <artifactId>maven-checkstyle-plugin</artifactId>
       <version>${version.maven-checkstyle-plugin}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${version.maven-pmd-plugin}</version>
        <configuration>
         <linkXRef>false</linkXRef>
         <targetJdk>${version.openjdk}</targetJdk>
         <rulesets>
         <ruleset>${project.basedir}/src/main/resources/pmd.xml</ruleset>
         </rulesets>
         <verbose>true</verbose>
         <excludes>
          <exclude>**/*Bean.java</exclude>
          <exclude>**/generated/*.java</exclude>
          </excludes>
        </configuration>
        <executions>
          <execution>
                <id>pmd-report</id>
                <goals>
                    <goal>pmd</goal>
                </goals>
                <phase>compile</phase>
            </execution>
            <execution>
                <id>pmd-check</id>
                <goals>
                    <goal>check</goal>
                </goals>
                <phase>compile</phase>
            </execution>
            <execution>
                <id>cpd-report</id>
                <goals>
                    <goal>cpd</goal>
                </goals>
                <phase>compile</phase>
            </execution>
            <execution>
                <id>cpd-check</id>
                <goals>
                    <goal>cpd-check</goal>
                </goals>
                <phase>compile</phase>
            </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${version.openjdk}</source>
          <target>${version.openjdk}</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <distributionManagement>
    <snapshotRepository>
      <id>snapshot</id>
      <name>armseligic-snapshot</name>
      <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-dev-local</url>
    </snapshotRepository>
    <repository>
      <id>release</id>
      <name>armseligic-release</name>
      <url>https://arm.seli.gic.ericsson.se/artifactory/proj-eric-oss-release-local</url>
    </repository>
  </distributionManagement>

</project>
